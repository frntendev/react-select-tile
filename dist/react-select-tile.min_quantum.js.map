{"version":3,"sources":["src/index.tsx","src/MenuItem.tsx"],"names":["react_1","$fsx","r","core_1","styles_1","GlobalStyles_1","helpers_1","Menu_1","Input_1","MenuItem_1","EmptyStatus_1","exports","Select","value","onItemClick","onInputChange","onMenuClose","onMenuOpen","menuIsOpen","containerClassName","containerStyle","inputClassName","inputStyle","menuClassName","menuStyle","menuItemClassName","menuItemStyle","activeItemClassName","activeItemStyle","menuComponent","emptyComponent","menuItemComponent","openAnimationDelay","menuItemColumns","menuItemWidth","menuPosition","placeholder","options","iconClassName","iconStyle","showMenu","setShowMenu","useState","showTransition","setShowTransition","offsetX","setOffsetX","offsetY","setOffsetY","menuWidth","setMenuWidth","inputHeight","setInputHeight","menuRef","useRef","inputRef","delayedExpiration","setTimeout","useOutsideAlerter","useEffect","lockBody","position","getPosition","_a","current","_c","_b","offsetHeight","x","y","_e","_d","_g","_f","offsetWidth","unLockBody","EmptyContent","selectedItem","find","s","jsx","css","style","container","className","icon","GlobalStyles","Input","onClick","onFocus","onChange","label","Menu","length","EmptyStatus","map","MenuItem","key","isActive","val","children","MenuItemContent","styles","Object","assign","menuItem","menuItemActive"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { useRef, useEffect, useState } from \"react\";\nimport { jsx } from \"@emotion/core\";\nimport { style } from \"./styles\";\nimport { GlobalStyles } from \"./GlobalStyles\";\nimport {\n  getPosition,\n  useOutsideAlerter,\n  lockBody,\n  unLockBody\n} from \"./helpers\";\nimport { SelectProps, Option } from \"./types\";\nimport { Menu } from \"./Menu\";\nimport { Input } from \"./Input\";\nimport { MenuItem } from \"./MenuItem\";\nimport { EmptyStatus } from \"./EmptyStatus\";\n\nexport const Select = ({\n  value,\n  onItemClick,\n  onInputChange,\n  onMenuClose,\n  onMenuOpen,\n  menuIsOpen = false,\n  containerClassName,\n  containerStyle,\n  inputClassName,\n  inputStyle,\n  menuClassName,\n  menuStyle,\n  menuItemClassName,\n  menuItemStyle,\n  activeItemClassName,\n  activeItemStyle,\n  menuComponent,\n  emptyComponent,\n  menuItemComponent,\n  openAnimationDelay = 300,\n  menuItemColumns = 4,\n  menuItemWidth = 120,\n  menuPosition = \"bottom\",\n  placeholder = \"\",\n  options,\n  iconClassName,\n  iconStyle\n}: SelectProps) => {\n  const [showMenu, setShowMenu] = useState<Boolean>(menuIsOpen);\n  const [showTransition, setShowTransition] = useState<Boolean>(false);\n  const [offsetX, setOffsetX] = useState<number>(0);\n  const [offsetY, setOffsetY] = useState<number>(0);\n  const [menuWidth, setMenuWidth] = useState<number>(0);\n  const [inputHeight, setInputHeight] = useState<number>(0);\n  const menuRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const delayedExpiration = (): void => {\n    setShowTransition(true);\n    setTimeout(() => {\n      setShowMenu(false);\n      if (onMenuClose) onMenuClose();\n      setShowTransition(false);\n    }, openAnimationDelay);\n  };\n\n  useOutsideAlerter(menuRef, delayedExpiration);\n\n  useEffect(() => {\n    if (showMenu) {\n      lockBody();\n      const position = getPosition(inputRef?.current);\n      setInputHeight(inputRef?.current?.offsetHeight || 0);\n      setOffsetX(position.x);\n      setOffsetY(position.y + (inputRef?.current?.offsetHeight || 0));\n      setMenuWidth(inputRef?.current?.offsetWidth || 0);\n      if (onMenuOpen) onMenuOpen();\n    } else {\n      unLockBody();\n    }\n  }, [showMenu]);\n\n  const EmptyContent = emptyComponent;\n  const selectedItem = options.find(s => s.value === value);\n\n  return (\n    <div\n      css={style.container}\n      className={containerClassName}\n      style={containerStyle}\n    >\n      <span css={style.icon} className={iconClassName} style={iconStyle} />\n      <GlobalStyles />\n\n      <Input\n        inputStyle={inputStyle}\n        onClick={() => setShowMenu(true)}\n        onFocus={() => setShowMenu(true)}\n        onChange={onInputChange}\n        value={selectedItem?.label || \"\"}\n        inputRef={inputRef}\n        inputClassName={inputClassName}\n        placeholder={placeholder}\n      />\n      {showMenu && (\n        <Menu\n          menuRef={menuRef}\n          menuItemColumns={menuItemColumns}\n          menuItemWidth={menuItemWidth}\n          menuWidth={menuWidth}\n          offsetX={offsetX}\n          offsetY={offsetY}\n          menuPosition={menuPosition}\n          inputHeight={inputHeight}\n          showTransition={showTransition}\n          menuComponent={menuComponent}\n          menuClassName={menuClassName}\n          menuStyle={menuStyle}\n        >\n          {(!options || options.length === 0) &&\n            (EmptyContent ? <EmptyContent /> : <EmptyStatus />)}\n          {options &&\n            options.map(({ label, value }: Option) => (\n              <MenuItem\n                key={value}\n                value={value}\n                isActive={value === selectedItem?.value}\n                onClick={val => {\n                  delayedExpiration();\n                  if (onItemClick) {\n                    return onItemClick(val);\n                  }\n                }}\n                menuItemClassName={menuItemClassName}\n                menuItemStyle={menuItemStyle}\n                menuItemComponent={menuItemComponent}\n                activeItemClassName={activeItemClassName}\n                activeItemStyle={activeItemStyle}\n              >\n                {label}\n              </MenuItem>\n            ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport { style } from \"./styles\";\nimport { MenuItemProps } from \"./types\";\n\nexport const MenuItem = ({\n  onClick,\n  menuItemClassName,\n  menuItemStyle,\n  children,\n  menuItemComponent,\n  value = \"\",\n  isActive,\n  activeItemClassName,\n  activeItemStyle\n}: MenuItemProps) => {\n  const MenuItemContent = menuItemComponent;\n  const styles = {\n    ...menuItemStyle,\n    ...(isActive && activeItemStyle)\n  };\n\n  return MenuItemContent ? (\n    <MenuItemContent>{children}</MenuItemContent>\n  ) : (\n    <div\n      onClick={() => onClick && onClick(value)}\n      css={css`\n        ${style.menuItem};\n        ${isActive && style.menuItemActive}\n      `}\n      className={`${menuItemClassName}${isActive && ` ${activeItemClassName}`}`}\n      style={styles}\n    >\n      <div>{children}</div>\n    </div>\n  );\n};\n"]}