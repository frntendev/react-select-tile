{"version":3,"sources":["src/index.tsx","src/styles.ts","src/GlobalStyles.tsx","src/helpers.ts","src/Menu.tsx","src/Input.tsx","src/MenuItem.tsx","src/EmptyStatus.tsx"],"names":["react_1","$fsx","r","core_1","styles_1","GlobalStyles_1","helpers_1","Menu_1","Input_1","MenuItem_1","EmptyStatus_1","exports","Select","value","onItemClick","onInputChange","onMenuClose","onMenuOpen","menuIsOpen","containerClassName","containerStyle","inputClassName","inputStyle","menuClassName","menuStyle","menuItemClassName","menuItemStyle","menuComponent","emptyComponent","menuItemComponent","openAnimationDelay","menuItemColumns","menuItemWidth","menuPosition","placeholder","options","showMenu","setShowMenu","useState","showTransition","setShowTransition","offsetX","setOffsetX","offsetY","setOffsetY","menuWidth","setMenuWidth","inputHeight","setInputHeight","menuRef","useRef","inputRef","useOutsideAlerter","setTimeout","useEffect","lockBody","position","getPosition","_a","current","_c","_b","offsetHeight","x","y","_e","_d","_g","_f","offsetWidth","unLockBody","EmptyContent","jsx","css","style","container","className","GlobalStyles","Input","onClick","onFocus","onChange","Menu","length","EmptyStatus","map","label","MenuItem","key","swipeIn","keyframes","swipeOut","input","menu","menuItem","Global","styles","el","xPos","yPos","tagName","xScroll","scrollLeft","document","documentElement","yScroll","scrollTop","offsetLeft","clientLeft","offsetTop","clientTop","offsetParent","ref","fn","handleClickOutside","event","contains","target","addEventListener","removeEventListener","body","addClass","removeClass","classList","add","hasClass","remove","reg","RegExp","replace","match","children","MenuContent","window","innerHeight","defaultValue","readOnly","type","MenuItemContent","React","createElement"],"mappings":"mFACA,MAAAA,EAAAC,EAAAC,EAAA,SACAC,EAAAF,EAAAC,EAAA,iBACAE,EAAAH,EAAAC,EAAA,GACAG,EAAAJ,EAAAC,EAAA,GACAI,EAAAL,EAAAC,EAAA,GAOAK,EAAAN,EAAAC,EAAA,GACAM,EAAAP,EAAAC,EAAA,GACAO,EAAAR,EAAAC,EAAA,GACAQ,EAAAT,EAAAC,EAAA,GAEaS,EAAAC,OAAS,EACpBC,MAAAA,EACAC,YAAAA,EACAC,cAAAA,EACAC,YAAAA,EACAC,WAAAA,EACAC,WAAAA,GAAa,EACbC,mBAAAA,EACAC,eAAAA,EACAC,eAAAA,EACAC,WAAAA,EACAC,cAAAA,EACAC,UAAAA,EACAC,kBAAAA,EACAC,cAAAA,EACAC,cAAAA,EACAC,eAAAA,EACAC,kBAAAA,EACAC,mBAAAA,EAAqB,IACrBC,gBAAAA,EAAkB,EAClBC,cAAAA,EAAgB,IAChBC,aAAAA,EAAe,SACfC,YAAAA,EAAc,GACdC,QAAAA,MAEA,MAAOC,EAAUC,GAAerC,EAAAsC,SAAkBpB,IAC3CqB,EAAgBC,GAAqBxC,EAAAsC,UAAkB,IACvDG,EAASC,GAAc1C,EAAAsC,SAAiB,IACxCK,EAASC,GAAc5C,EAAAsC,SAAiB,IACxCO,EAAWC,GAAgB9C,EAAAsC,SAAiB,IAC5CS,EAAaC,GAAkBhD,EAAAsC,SAAiB,GACjDW,EAAUjD,EAAAkD,OAAuB,MACjCC,EAAWnD,EAAAkD,OAAyB,MAW1C5C,EAAA8C,kBAAkBH,EATQ,KACxBT,GAAkB,GAClBa,WAAW,KACThB,GAAY,GACRrB,GAAaA,IACjBwB,GAAkB,IACjBV,KAKL9B,EAAAsD,UAAU,uBACR,GAAIlB,EAAU,CACZ9B,EAAAiD,WACA,MAAMC,EAAWlD,EAAAmD,YAAoB,QAATC,EAACP,SAAQ,IAAAO,OAAA,EAAAA,EAAEC,SACvCX,GAAgC,QAAjBY,EAAQ,QAARC,EAAAV,SAAQ,IAAAU,OAAA,EAAAA,EAAEF,eAAO,IAAAC,OAAA,EAAAA,EAAEE,eAAgB,GAClDpB,EAAWc,EAASO,GACpBnB,EAAWY,EAASQ,IAAsB,QAAjBC,EAAQ,QAARC,EAAAf,SAAQ,IAAAe,OAAA,EAAAA,EAAEP,eAAO,IAAAM,OAAA,EAAAA,EAAEH,eAAgB,IAC5DhB,GAA8B,QAAjBqB,EAAQ,QAARC,EAAAjB,SAAQ,IAAAiB,OAAA,EAAAA,EAAET,eAAO,IAAAQ,OAAA,EAAAA,EAAEE,cAAe,GAC3CpD,GAAYA,SAEhBX,EAAAgE,cAED,CAAClC,IAEJ,MAAMmC,EAAe3C,EAErB,OACEzB,EAAAqE,IAAA,MAAA,CACEC,IAAKrE,EAAAsE,MAAMC,UACXC,UAAWzD,EACXuD,MAAOtD,GAEPjB,EAAAqE,IAACnE,EAAAwE,aAAY,MAEb1E,EAAAqE,IAAChE,EAAAsE,MAAK,CACJxD,WAAYA,EACZyD,QAAS,IAAM1C,GAAY,GAC3B2C,QAAS,IAAM3C,GAAY,GAC3B4C,SAAUlE,EACVF,MAAOA,EACPsC,SAAUA,EACV9B,eAAgBA,EAChBa,YAAaA,IAEdE,GACCjC,EAAAqE,IAACjE,EAAA2E,KAAI,CACHjC,QAASA,EACTlB,gBAAiBA,EACjBC,cAAeA,EACfa,UAAWA,EACXJ,QAASA,EACTE,QAASA,EACTV,aAAcA,EACdc,YAAaA,EACbR,eAAgBA,EAChBZ,cAAeA,EACfJ,cAAeA,EACfC,UAAWA,KAERW,GAA8B,IAAnBA,EAAQgD,UACnBZ,EAAepE,EAAAqE,IAACD,EAAY,MAAMpE,EAAAqE,IAAC9D,EAAA0E,YAAW,OAChDjD,GACCA,EAAQkD,IAAI,EAAGC,MAAAA,EAAOzE,MAAAA,KACpBV,EAAAqE,IAAC/D,EAAA8E,SAAQ,CACPC,IAAK3E,EACLA,MAAOA,EACPkE,QAASjE,EACTW,kBAAmBA,EACnBC,cAAeA,EACfG,kBAAmBA,GAElByD,8EC3HjB,MAAAnF,EAAAF,EAAAC,EAAA,iBAEaS,EAAA8E,QAAUtF,EAAAuF,SAAS;;;;;;;;;;EAYnB/E,EAAAgF,SAAWxF,EAAAuF,SAAS;;;;;;;;;;;EAapB/E,EAAA+D,MAAQ,CACnBC,UAAWxE,EAAAsE,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAkCdmB,MAAOzF,EAAAsE,GAAG;;;;;;;;;;;IAYVoB,KAAM1F,EAAAsE,GAAG;;;;;;;;;;iBAUM9D,EAAA8E;;;;;;;;;;IAWfK,SAAU3F,EAAAsE,GAAG;;;;;;;;;;4EC9Ff,MAAAtE,EAAAF,EAAAC,EAAA,iBACaS,EAAAkE,aAAe,IAExB1E,EAAAqE,IAACrE,EAAA4F,OAAM,CACLC,OAAQ7F,EAAAsE,GAAG;;;;;;;;;;iFCLjB,MAAAzE,EAAAC,EAAAC,EAAA,SAEAS,EAAA8C,YAAA,SAA4BwC,GAI1B,IAHA,IAAIC,EAAO,EACPC,EAAO,EAEJF,GAAI,CACT,GAAkB,QAAdA,EAAGG,QAAmB,CAExB,IAAIC,EAAUJ,EAAGK,YAAcC,SAASC,gBAAgBF,WACpDG,EAAUR,EAAGS,WAAaH,SAASC,gBAAgBE,UAEvDR,GAAQD,EAAGU,WAAaN,EAAUJ,EAAGW,WACrCT,GAAQF,EAAGY,UAAYJ,EAAUR,EAAGa,eAGpCZ,GAAQD,EAAGU,WAAaV,EAAGK,WAAaL,EAAGW,WAC3CT,GAAQF,EAAGY,UAAYZ,EAAGS,UAAYT,EAAGa,UAG3Cb,EAAKA,EAAGc,aAEV,MAAO,CACLhD,EAAGmC,EACHlC,EAAGmC,IAGPxF,EAAAyC,kBAAA,SAAkC4D,EAAKC,GACrC,SAASC,EAAmBC,GACtBH,EAAIrD,UAAYqD,EAAIrD,QAAQyD,SAASD,EAAME,SAC7CJ,IAIJjH,EAAAsD,UAAU,KACRiD,SAASe,iBAAiB,YAAaJ,GAChC,KACLX,SAASgB,oBAAoB,YAAaL,OAKnCvG,EAAA4C,SAAW,KACtB,GAAwB,oBAAbgD,SAA0B,CACnC,MAAMiB,EAAOjB,SAASiB,KACtB7G,EAAA8G,SAASD,EAAM,eAIN7G,EAAA2D,WAAa,KACxB,GAAwB,oBAAbiC,SAA0B,CACnC,MAAMiB,EAAOjB,SAASiB,KACtB7G,EAAA+G,YAAYF,EAAM,eAIT7G,EAAA8G,SAAW,CAACxB,EAAIrB,KACvBqB,EAAG0B,UAAW1B,EAAG0B,UAAUC,IAAIhD,GACzBjE,EAAAkH,SAAS5B,EAAIrB,KAAYqB,EAAGrB,WAAa,IAAMA,IAG9CjE,EAAA+G,YAAc,CAACzB,EAAIrB,KAC9B,GAAIqB,EAAG0B,UAAW1B,EAAG0B,UAAUG,OAAOlD,QACjC,GAAIjE,EAAAkH,SAAS5B,EAAIrB,GAAY,CAChC,IAAImD,EAAM,IAAIC,OAAO,UAAYpD,EAAY,WAC7CqB,EAAGrB,UAAYqB,EAAGrB,UAAUqD,QAAQF,EAAK,OAGhCpH,EAAAkH,SAAW,CAAC5B,EAAIrB,IACvBqB,EAAG0B,UAAkB1B,EAAG0B,UAAUP,SAASxC,KAEpCqB,EAAGrB,UAAUsD,MAAM,IAAIF,OAAO,UAAYpD,EAAY,mFCtEnE,MAAAzE,EAAAF,EAAAC,EAAA,iBACAE,EAAAH,EAAAC,EAAA,GAGaS,EAAAuE,KAAO,EAClBjC,QAAAA,EACAlB,gBAAAA,EACAC,cAAAA,EACAa,UAAAA,EACAJ,QAAAA,EACAE,QAAAA,EACAV,aAAAA,EACAc,YAAAA,EACAR,eAAAA,EACAhB,cAAAA,EACAC,UAAAA,EACAG,cAAAA,EACAwG,SAAAA,MAEA,MAAMC,EAAczG,EAEpB,OACExB,EAAAqE,IAAA,MAAA,CACEwC,IAAK/D,EACLwB,IAAKtE,EAAAsE,GAAG;UACJtE,EAAAsE,GAAG;;4BAEe5B;;kBAEVJ;YACW,WAAjBR,EACE,aAAaU,aACb,iBAAiB0F,OAAOC,mBAAmB3F,SAAeI;;QAGlE6B,UAAWrD,EACXmD,MAAOlD,GAEN4G,EACCjI,EAAAqE,IAAC4D,EAAW,KAAED,GAEdhI,EAAAqE,IAAA,MAAA,CACEC,IAAKtE,EAAAsE,GAAG;cACJrE,EAAAsE,MAAMmB;cACN1F,EAAAsE,GAAG;;kBAEC1C;kBACAC;;;cAGJO,GACApC,EAAAsE,GAAG;6BACYrE,EAAAuF;;aAIlBwC,4ECxDX,MAAAhI,EAAAF,EAAAC,EAAA,iBACAE,EAAAH,EAAAC,EAAA,GAGaS,EAAAmE,MAAQ,EACnBzD,eAAAA,EACAC,WAAAA,EACAT,MAAAA,EAAQ,GACRsC,SAAAA,EACAjB,YAAAA,EACA6C,QAAAA,EACAC,QAAAA,EACAC,SAAAA,EACAsD,aAAAA,KAGEpI,EAAAqE,IAAA,QAAA,CACEgE,UAAQ,EACR/D,IAAKrE,EAAAsE,MAAMkB,MACXhB,UAAWvD,EACXqD,MAAOpD,EACPmH,KAAK,OACL1D,QAASA,EACTC,QAASA,EACTC,SAAUA,EACVpE,MAAOA,EACPmG,IAAK7D,EACLjB,YAAaA,EACbqG,aAAcA,2EC5BpB,MAAApI,EAAAF,EAAAC,EAAA,iBACAE,EAAAH,EAAAC,EAAA,GAGaS,EAAA4E,SAAW,EACtBR,QAAAA,EACAtD,kBAAAA,EACAC,cAAAA,EACAyG,SAAAA,EACAtG,kBAAAA,EACAhB,MAAAA,EAAQ,OAER,MAAM6H,EAAkB7G,EAExB,OAAO6G,EACLvI,EAAAqE,IAACkE,EAAe,KAAEP,GAElBhI,EAAAqE,IAAA,MAAA,CACEO,QAAS,IAAMA,GAAWA,EAAQlE,GAClC4D,IAAKrE,EAAAsE,MAAMoB,SACXlB,UAAWnD,EACXiD,MAAOhD,GAENyG,2ECxBP,MAAAQ,EAAA1I,EAAAC,EAAA,SAEaS,EAAAyE,YAAc,IAClBuD,EAAAC,cAAA,MAAA,KAAA","sourcesContent":["/** @jsx jsx */\nimport { useRef, useEffect, useState } from \"react\";\nimport { jsx } from \"@emotion/core\";\nimport { style } from \"./styles\";\nimport { GlobalStyles } from \"./GlobalStyles\";\nimport {\n  getPosition,\n  useOutsideAlerter,\n  lockBody,\n  unLockBody\n} from \"./helpers\";\nimport { SelectProps, Option } from \"./types\";\nimport { Menu } from \"./Menu\";\nimport { Input } from \"./Input\";\nimport { MenuItem } from \"./MenuItem\";\nimport { EmptyStatus } from \"./EmptyStatus\";\n\nexport const Select = ({\n  value,\n  onItemClick,\n  onInputChange,\n  onMenuClose,\n  onMenuOpen,\n  menuIsOpen = false,\n  containerClassName,\n  containerStyle,\n  inputClassName,\n  inputStyle,\n  menuClassName,\n  menuStyle,\n  menuItemClassName,\n  menuItemStyle,\n  menuComponent,\n  emptyComponent,\n  menuItemComponent,\n  openAnimationDelay = 300,\n  menuItemColumns = 4,\n  menuItemWidth = 120,\n  menuPosition = \"bottom\",\n  placeholder = \"\",\n  options\n}: SelectProps) => {\n  const [showMenu, setShowMenu] = useState<Boolean>(menuIsOpen);\n  const [showTransition, setShowTransition] = useState<Boolean>(false);\n  const [offsetX, setOffsetX] = useState<number>(0);\n  const [offsetY, setOffsetY] = useState<number>(0);\n  const [menuWidth, setMenuWidth] = useState<number>(0);\n  const [inputHeight, setInputHeight] = useState<number>(0);\n  const menuRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const delayedExpiration = (): void => {\n    setShowTransition(true);\n    setTimeout(() => {\n      setShowMenu(false);\n      if (onMenuClose) onMenuClose();\n      setShowTransition(false);\n    }, openAnimationDelay);\n  };\n\n  useOutsideAlerter(menuRef, delayedExpiration);\n\n  useEffect(() => {\n    if (showMenu) {\n      lockBody();\n      const position = getPosition(inputRef?.current);\n      setInputHeight(inputRef?.current?.offsetHeight || 0);\n      setOffsetX(position.x);\n      setOffsetY(position.y + (inputRef?.current?.offsetHeight || 0));\n      setMenuWidth(inputRef?.current?.offsetWidth || 0);\n      if (onMenuOpen) onMenuOpen();\n    } else {\n      unLockBody();\n    }\n  }, [showMenu]);\n\n  const EmptyContent = emptyComponent;\n\n  return (\n    <div\n      css={style.container}\n      className={containerClassName}\n      style={containerStyle}\n    >\n      <GlobalStyles />\n\n      <Input\n        inputStyle={inputStyle}\n        onClick={() => setShowMenu(true)}\n        onFocus={() => setShowMenu(true)}\n        onChange={onInputChange}\n        value={value}\n        inputRef={inputRef}\n        inputClassName={inputClassName}\n        placeholder={placeholder}\n      />\n      {showMenu && (\n        <Menu\n          menuRef={menuRef}\n          menuItemColumns={menuItemColumns}\n          menuItemWidth={menuItemWidth}\n          menuWidth={menuWidth}\n          offsetX={offsetX}\n          offsetY={offsetY}\n          menuPosition={menuPosition}\n          inputHeight={inputHeight}\n          showTransition={showTransition}\n          menuComponent={menuComponent}\n          menuClassName={menuClassName}\n          menuStyle={menuStyle}\n        >\n          {(!options || options.length === 0) &&\n            (EmptyContent ? <EmptyContent /> : <EmptyStatus />)}\n          {options &&\n            options.map(({ label, value }: Option) => (\n              <MenuItem\n                key={value}\n                value={value}\n                onClick={onItemClick}\n                menuItemClassName={menuItemClassName}\n                menuItemStyle={menuItemStyle}\n                menuItemComponent={menuItemComponent}\n              >\n                {label}\n              </MenuItem>\n            ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n","import { css, keyframes } from \"@emotion/core\";\n\nexport const swipeIn = keyframes`\n  from {\n      opacity: 0;\n      transform: translateY(-10px);\n  }\n\n  to {\n      opacity: 1;\n      transform: translateY(0);\n  }\n`;\n\nexport const swipeOut = keyframes`\n  from {\n    opacity: 1;\n      transform: translateY(0);\n\n  }\n\n  to {\n    opacity: 0;\n      transform: translateY(-10px);\n  }\n`;\n\nexport const style = {\n  container: css`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex: 1;\n    min-height: 32px;\n    pointer-events: auto;\n    background: #fff;\n    cursor: default;\n    border-width: 1px;\n    border-style: solid;\n    border-color: #ccc;\n    z-index: 0;\n    box-sizing: border-box;\n    max-width: 100%;\n    box-shadow: none;\n    position: relative;\n    label: container;\n\n    &:before {\n      border-style: solid;\n      border-width: 0.15em 0.15em 0 0;\n      content: \"\";\n      display: inline-block;\n      height: 0.45em;\n      position: absolute;\n      vertical-align: top;\n      width: 0.45em;\n      right: 0.7rem;\n      top: 50%;\n      border-color: #cccccc;\n      transform: translateY(-50%) rotate(135deg);\n    }\n  `,\n  input: css`\n    outline: none;\n    width: 100%;\n    height: 100%;\n    padding: 5px 10px;\n    border: 0;\n    cursor: pointer;\n    color: transparent;\n    text-shadow: 0 0 0 #000;\n    font-size: 1rem;\n    label: input;\n  `,\n  menu: css`\n    max-height: 200px;\n    overflow-y: scroll;\n    background: #f5f5f5;\n    z-index: 999;\n    padding: 1.25rem;\n    box-sizing: border-box;\n    display: grid;\n    grid-template-columns: repeat(4, 120px);\n    grid-gap: 0.25rem;\n    animation: ${swipeIn} 0.3s ease forwards;\n    box-shadow: 1px 1px 20px rgba(0, 0, 0, 0.05);\n    border: 1px solid #e4e4e4;\n    &:after {\n      content: \"\";\n      display: block;\n      height: 1.25rem;\n      width: 100%;\n    }\n    label: menu;\n  `,\n  menuItem: css`\n    padding: 0.5rem;\n    background: #e6e6e6;\n    cursor: pointer;\n    transition: 0.2s all ease;\n    label: menuItem;\n\n    &:hover {\n      background: #9575cd;\n    }\n  `\n};\n","/** @jsx jsx */\nimport { jsx, css, Global } from \"@emotion/core\";\nexport const GlobalStyles = () => {\n  return (\n    <Global\n      styles={css`\n        .body-lock {\n          position: fixed;\n          overflow: hidden;\n          height: 100%;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n        }\n      `}\n    />\n  );\n};\n","import { useEffect } from \"react\";\n\nexport function getPosition(el: HTMLElement | null) {\n  var xPos = 0;\n  var yPos = 0;\n\n  while (el) {\n    if (el.tagName == \"BODY\") {\n      // deal with browser quirks with body/window/document and page scroll\n      var xScroll = el.scrollLeft || document.documentElement.scrollLeft;\n      var yScroll = el.scrollTop || document.documentElement.scrollTop;\n\n      xPos += el.offsetLeft - xScroll + el.clientLeft;\n      yPos += el.offsetTop - yScroll + el.clientTop;\n    } else {\n      // for all other non-BODY elements\n      xPos += el.offsetLeft - el.scrollLeft + el.clientLeft;\n      yPos += el.offsetTop - el.scrollTop + el.clientTop;\n    }\n\n    el = el.offsetParent as HTMLElement;\n  }\n  return {\n    x: xPos,\n    y: yPos\n  };\n}\nexport function useOutsideAlerter(ref, fn) {\n  function handleClickOutside(event) {\n    if (ref.current && !ref.current.contains(event.target)) {\n      fn();\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n}\n\nexport const lockBody = () => {\n  if (typeof document !== \"undefined\") {\n    const body = document.body;\n    addClass(body, \"body-lock\");\n  }\n};\n\nexport const unLockBody = () => {\n  if (typeof document !== \"undefined\") {\n    const body = document.body;\n    removeClass(body, \"body-lock\");\n  }\n};\n\nexport const addClass = (el, className) => {\n  if (el.classList) el.classList.add(className);\n  else if (!hasClass(el, className)) el.className += \" \" + className;\n};\n\nexport const removeClass = (el, className) => {\n  if (el.classList) el.classList.remove(className);\n  else if (hasClass(el, className)) {\n    var reg = new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\");\n    el.className = el.className.replace(reg, \" \");\n  }\n};\nexport const hasClass = (el, className) => {\n  if (el.classList) return el.classList.contains(className);\n  else\n    return !!el.className.match(new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"));\n};\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport { style, swipeOut } from \"./styles\";\nimport { MenuProps } from \"./types\";\n\nexport const Menu = ({\n  menuRef,\n  menuItemColumns,\n  menuItemWidth,\n  menuWidth,\n  offsetX,\n  offsetY,\n  menuPosition,\n  inputHeight,\n  showTransition,\n  menuClassName,\n  menuStyle,\n  menuComponent,\n  children\n}: MenuProps) => {\n  const MenuContent = menuComponent;\n\n  return (\n    <div\n      ref={menuRef}\n      css={css`\n        ${css`\n          position: fixed;\n          max-width: calc(${menuWidth}px + 110px);\n          min-width: ${menuWidth}px;\n          left: ${offsetX}px;\n          ${menuPosition === \"bottom\"\n            ? `top: calc(${offsetY}px + 5px)`\n            : `bottom : calc(${window.innerHeight}px - ${offsetY}px + ${inputHeight}px + 5px)`};\n        `}\n      `}\n      className={menuClassName}\n      style={menuStyle}\n    >\n      {MenuContent ? (\n        <MenuContent>{children}</MenuContent>\n      ) : (\n        <div\n          css={css`\n            ${style.menu}\n            ${css`\n              grid-template-columns: repeat(\n                ${menuItemColumns},\n                ${menuItemWidth}px\n              );\n            `}\n            ${showTransition &&\n              css`\n                animation: ${swipeOut} 0.3s ease forwards;\n              `}\n          `}\n        >\n          {children}\n        </div>\n      )}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { style } from \"./styles\";\nimport { InputProps } from \"./types\";\n\nexport const Input = ({\n  inputClassName,\n  inputStyle,\n  value = \"\",\n  inputRef,\n  placeholder,\n  onClick,\n  onFocus,\n  onChange,\n  defaultValue\n}: InputProps) => {\n  return (\n    <input\n      readOnly\n      css={style.input}\n      className={inputClassName}\n      style={inputStyle}\n      type=\"text\"\n      onClick={onClick}\n      onFocus={onFocus}\n      onChange={onChange}\n      value={value}\n      ref={inputRef}\n      placeholder={placeholder}\n      defaultValue={defaultValue}\n    />\n  );\n};\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { style } from \"./styles\";\nimport { MenuItemProps } from \"./types\";\n\nexport const MenuItem = ({\n  onClick,\n  menuItemClassName,\n  menuItemStyle,\n  children,\n  menuItemComponent,\n  value = \"\"\n}: MenuItemProps) => {\n  const MenuItemContent = menuItemComponent;\n\n  return MenuItemContent ? (\n    <MenuItemContent>{children}</MenuItemContent>\n  ) : (\n    <div\n      onClick={() => onClick && onClick(value)}\n      css={style.menuItem}\n      className={menuItemClassName}\n      style={menuItemStyle}\n    >\n      {children}\n    </div>\n  );\n};\n","import * as React from \"react\";\n\nexport const EmptyStatus = () => {\n  return <div>List is empty</div>;\n};\n"]}